---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";

// Define LyricsTypes for consistency with chords and lyrics pages
interface LyricsTypes {
  url: string;
  title: string;
  lyrics: string | null;
  chords: string | null;
  description: string | null;
  album: string | null;
  artist: string | null;
  category: string | null;
  pub_date: string | null;
  key: string | null;
  tags: string | null;
}

const method = Astro.request.method;
const formData = method === 'POST' ? await Astro.request.formData() : null;

let message: string | null = null;

if (method === 'POST' && formData) {
  // Auto-generate URL from title
  const title = formData.get('title')?.toString() || '';
  const generatedUrl = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
  
  const song: LyricsTypes = {
    url: generatedUrl,
    title: title,
    lyrics: formData.get('lyrics')?.toString() || null,
    chords: formData.get('chords')?.toString() || null,
    description: formData.get('description')?.toString() || null,
    album: formData.get('album')?.toString() || null,
    artist: formData.get('artist')?.toString() || null,
    category: formData.get('category')?.toString() || null,
    pub_date: formData.get('pub_date')?.toString() || null,
    key: formData.get('key')?.toString() || null,
    tags: formData.get('tags')?.toString() || null,
  };

  try {
    const db = Astro.locals.runtime.env.DB as import('astro').AstroGlobal['locals']['runtime']['env']['DB'];

    await db.prepare(`
      INSERT INTO songs (
        url, title, lyrics, chords, description, album, artist,
        category, pub_date, key, tags
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `)
    .bind(
      song.url,
      song.title,
      song.lyrics,
      song.chords,
      song.description,
      song.album,
      song.artist,
      song.category,
      song.pub_date,
      song.key,
      song.tags
    )
    .run();

    message = '✅ Song uploaded successfully!';
  } catch (err: any) {
    message = `❌ Error uploading song: ${err.message}`;
  }
}

// List of musical keys for the dropdown
const musicalKeys = [
  'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 
  'G', 'G#', 'A', 'A#', 'B',
  'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 
  'F#m', 'Gm', 'G#m', 'Am', 'A#m', 'Bm'
];

// Common chords for reference
const commonChords = [
  'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B',
  'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'A#m', 'Bm',
  'C7', 'C#7', 'D7', 'D#7', 'E7', 'F7', 'F#7', 'G7', 'G#7', 'A7', 'A#7', 'B7',
  'Cm7', 'C#m7', 'Dm7', 'D#m7', 'Em7', 'Fm7', 'F#m7', 'Gm7', 'G#m7', 'Am7', 'A#m7', 'Bm7',
  'Cmaj7', 'C#maj7', 'Dmaj7', 'D#maj7', 'Emaj7', 'Fmaj7', 'F#maj7', 'Gmaj7', 'G#maj7', 'Amaj7', 'A#maj7', 'Bmaj7',
  'Csus2', 'Csus4', 'Dbsus2', 'Dbsus4', 'Dsus2', 'Dsus4', 'Ebsus2', 'Ebsus4', 'Esus2', 'Esus4', 'Fsus2', 'Fsus4',
  'F#sus2', 'F#sus4', 'Gsus2', 'Gsus4', 'Absus2', 'Absus4', 'Asus2', 'Asus4', 'Bbsus2', 'Bbsus4', 'Bsus2', 'Bsus4'
];
---

<Layout
  title="Christian Lyrics"
  description="Collection of Christian worship lyrics"
>

    {message && <p style={{ color: message.startsWith('✅') ? 'green' : 'red' }}>{message}</p>}
    <div class="container mx-auto px-4 py-8">
      <div class="bg-white rounded-lg shadow-md p-6">
        <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Upload New Song</h1>
        
        <form method="POST" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Left Column -->
            <div class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">URL (auto-generated)</label>
                <input type="text" name="url" id="url" disabled 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md bg-gray-100 cursor-not-allowed">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Title*</label>
                <input type="text" name="title" id="title" required 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Artist</label>
                <input type="text" name="artist" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Album</label>
                <input type="text" name="album" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
            </div>
            
            <!-- Right Column -->
            <div class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Category</label>
                <input type="text" name="category" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Key</label>
                <select name="key" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                  <option value="">Select Key</option>
                  {musicalKeys.map(key => (
                    <option value={key}>{key}</option>
                  ))}
                </select>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Tags</label>
                <input type="text" name="tags" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Publish Date</label>
                <input type="datetime-local" name="pub_date" 
                       class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
              </div>
            </div>
          </div>
          
          <!-- Full Width Fields -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Lyrics*</label>
            <textarea name="lyrics" required rows="15"
                      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition"
                      placeholder="Enter lyrics in ChordPro format, e.g., {verse}...{chorus}..."></textarea>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Chords</label>
            <textarea name="chords" rows="15"
                      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition"
                      placeholder="Enter chords in format: [Verse] *C*Lord *G*we *Am*pray *F*today..."></textarea>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
            <textarea name="description" rows="3"
                      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition"></textarea>
          </div>
          
          <div class="flex justify-center">
            <button type="submit" 
                    class="px-6 py-3 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition">
              Upload Song
            </button>
          </div>
        </form>
      </div>
    </div>
    
    <script>
      const titleInput = document.getElementById('title');
      const urlInput = document.getElementById('url');

      titleInput.addEventListener('input', () => {
        const title = titleInput.value;
        const generatedUrl = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
        urlInput.value = generatedUrl;
      });
    </script>
</Layout>