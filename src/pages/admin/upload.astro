---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";

// Define LyricsTypes for consistency with chords and lyrics pages
interface LyricsTypes {
  url: string;
  title: string;
  lyrics: string | null;
  chords: string | null;
  description: string | null;
  album: string | null;
  artist: string | null;
  category: string | null;
  pub_date: string | null;
  key: string | null;
  tags: string | null;
  primary_language: string | null;
  secondary_languages: string | null;
}

const method = Astro.request.method;
const formData = method === 'POST' ? await Astro.request.formData() : null;

let message: string | null = null;

if (method === 'POST' && formData) {
  // Auto-generate URL from title
  const title = formData.get('title')?.toString() || '';
  const generatedUrl = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
  
  const song: LyricsTypes = {
    url: generatedUrl,
    title: title,
    lyrics: formData.get('lyrics')?.toString() || null,
    chords: formData.get('chords')?.toString() || null,
    description: formData.get('description')?.toString() || null,
    album: formData.get('album')?.toString() || null,
    artist: formData.get('artist')?.toString() || null,
    category: formData.get('category')?.toString() || null,
    pub_date: formData.get('pub_date')?.toString() || null,
    key: formData.get('key')?.toString() || null,
    tags: formData.get('tags')?.toString() || null,
    primary_language: formData.get('primary_language')?.toString() || null,
    secondary_languages: formData.get('secondary_languages') ? Array.from(formData.getAll('secondary_languages')).join(',') : null,
  };

  try {
    const db = Astro.locals.runtime.env.DB as import('astro').AstroGlobal['locals']['runtime']['env']['DB'];

    await db.prepare(`
      INSERT INTO songs (
        url, title, lyrics, chords, description, album, artist,
        category, pub_date, key, tags, primary_language, secondary_languages
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `)
    .bind(
      song.url,
      song.title,
      song.lyrics,
      song.chords,
      song.description,
      song.album,
      song.artist,
      song.category,
      song.pub_date,
      song.key,
      song.tags,
      song.primary_language,
      song.secondary_languages
    )
    .run();

    message = '✅ Song uploaded successfully!';
  } catch (err: any) {
    message = `❌ Error uploading song: ${err.message}`;
  }
}

// List of musical keys for the dropdown
const musicalKeys = [
  'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 
  'G', 'G#', 'A', 'A#', 'B',
  'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 
  'F#m', 'Gm', 'G#m', 'Am', 'A#m', 'Bm'
];

// Common chords for reference
const commonChords = [
  'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B',
  'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'A#m', 'Bm',
  'C7', 'C#7', 'D7', 'D#7', 'E7', 'F7', 'F#7', 'G7', 'G#7', 'A7', 'A#7', 'B7',
  'Cm7', 'C#m7', 'Dm7', 'D#m7', 'Em7', 'Fm7', 'F#m7', 'Gm7', 'G#m7', 'Am7', 'A#m7', 'Bm7',
  'Cmaj7', 'C#maj7', 'Dmaj7', 'D#maj7', 'Emaj7', 'Fmaj7', 'F#maj7', 'Gmaj7', 'G#maj7', 'Amaj7', 'A#maj7', 'Bmaj7',
  'Csus2', 'Csus4', 'Dbsus2', 'Dbsus4', 'Dsus2', 'Dsus4', 'Ebsus2', 'Ebsus4', 'Esus2', 'Esus4', 'Fsus2', 'Fsus4',
  'F#sus2', 'F#sus4', 'Gsus2', 'Gsus4', 'Absus2', 'Absus4', 'Asus2', 'Asus4', 'Bbsus2', 'Bbsus4', 'Bsus2', 'Bsus4'
];

// Major Indian languages for dropdowns and checkboxes
const indianLanguages = [
  'Hindi', 'Bengali', 'Telugu', 'Marathi', 'Tamil', 'Urdu', 'Gujarati', 
  'Malayalam', 'Kannada', 'Oriya', 'Punjabi', 'Assamese', 'Maithili', 
  'Santhali', 'Kashmiri', 'Nepali', 'Konkani', 'Sindhi', 'Bodo'
];

const isLoggedIn = Astro.cookies.get('session')?.value === 'logged_in';

if (!isLoggedIn) {
  return Astro.redirect('/admin/login');
}
---

<Layout
  title="Christian Lyrics"
  description="Collection of Christian worship lyrics"
>
<div class="container mx-auto px-4 py-4 flex justify-between items-center dark:bg-gray-900">
  <h1 class="text-xl font-bold text-gray-800 dark:text-gray-100">Admin Panel</h1>
  <div class="flex items-center gap-4">
    <button id="theme-toggle" class="p-2 rounded-full bg-gray-200 dark:bg-gray-700">
      <svg class="w-5 h-5 text-gray-800 dark:text-gray-100" fill="currentColor" viewBox="0 0 20 20">
        <path id="sun" class="hidden dark:block" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4.586 2.414a1 1 0 011.414 1.414l-.707.707a1 1 0 11-1.414-1.414l.707-.707zM16 10a1 1 0 011-1h1a1 1 0 110 2h-1a1 1 0 01-1-1zm-1.414 4.586a1 1 0 011.414 0l.707.707a1 1 0 01-1.414 1.414l-.707-.707a1 1 0 010-1.414zM10 16a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zm-4.586-1.414a1 1 0 010 1.414l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 0zM3 10a1 1 0 011-1h1a1 1 0 110 2H4a1 1 0 01-1-1zm1.414-4.586l.707-.707a1 1 0 011.414 1.414l-.707.707a1 1 0 01-1.414-1.414zM10 14a4 4 0 100-8 4 4 0 000 8z"/>
        <path id="moon" class="block dark:hidden" d="M12.553 3.146A7 7 0 006 10a7 7 0 006.553 6.854c-.32-.316-.553-.734-.553-1.2a2.5 2.5 0 015 0c0 .466-.233.884-.553 1.2A7 7 0 0012.553 3.146z"/>
      </svg>
    </button>
    <form action="/api/logout" method="POST">
      <button type="submit" class="px-4 py-2 bg-red-600 text-white font-medium rounded-md hover:bg-red-700 transition dark:bg-red-500 dark:hover:bg-red-600">
        Sign Out
      </button>
    </form>
  </div>
</div>

{message && <p class="text-center font-semibold mt-4" style={{ color: message.startsWith('✅') ? 'green' : 'red' }}>{message}</p>}

<div class="container mx-auto px-4 py-8 dark:bg-gray-900">
  <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
    <h2 class="text-2xl font-bold text-gray-800 mb-6 text-center dark:text-gray-100">Upload New Song</h2>
    
    <form method="POST" class="space-y-6">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">URL (auto-generated)</label>
            <input type="text" name="url" id="url" disabled 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md bg-gray-100 cursor-not-allowed dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Title*</label>
            <input type="text" name="title" id="title" required 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Artist</label>
            <input type="text" name="artist" 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Album</label>
            <input type="text" name="album" 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
        </div>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Category</label>
            <input type="text" name="category" 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Key</label>
            <select name="key" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
              <option value="">Select Key</option>
              {musicalKeys.map(key => (
                <option value={key}>{key}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Primary Language*</label>
            <select name="primary_language" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
              <option value="">Select Primary Language</option>
              {indianLanguages.map(lang => (
                <option value={lang}>{lang}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Secondary Languages</label>
            <div class="grid grid-cols-2 gap-2 max-h-40 overflow-y-auto border border-gray-300 rounded-md p-2 dark:border-gray-600 dark:bg-gray-700">
              {indianLanguages.map(lang => (
                <label class="flex items-center space-x-2 text-gray-700 dark:text-gray-300">
                  <input type="checkbox" name="secondary_languages" value={lang} 
                         class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-400" />
                  <span>{lang}</span>
                </label>
              ))}
            </div>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Tags</label>
            <input type="text" name="tags" 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Publish Date</label>
            <input type="datetime-local" name="pub_date" 
                   class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400">
          </div>
        </div>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Lyrics*</label>
        <textarea name="lyrics" required rows="15"
                 class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400"
                 placeholder="Enter lyrics in ChordPro format, e.g., {verse}...{chorus}..."></textarea>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Chords</label>
        <textarea name="chords" rows="15"
                 class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400"
                 placeholder="Enter chords in format: [Verse] *C*Lord *G*we *Am*pray *F*today..."></textarea>
      </div>
      
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300">Description</label>
        <textarea name="description" rows="3"
                 class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 dark:focus:ring-blue-400 dark:focus:border-blue-400"></textarea>
      </div>
      
      <div class="flex justify-center">
        <button type="submit" 
                class="px-6 py-3 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-400 dark:focus:ring-offset-gray-800">
          Upload Song
        </button>
      </div>
    </form>
  </div>
</div>
    
<script>
  const titleInput = document.getElementById('title') as HTMLInputElement | null;
  const urlInput = document.getElementById('url') as HTMLInputElement | null;

  if (titleInput && urlInput) {
    titleInput.addEventListener('input', () => {
      const title = titleInput.value;
      const generatedUrl = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
      urlInput.value = generatedUrl;
    });
  }

  // Dark mode toggle
  const themeToggle = document.getElementById('theme-toggle') as HTMLButtonElement | null;
  const sunIcon = document.getElementById('sun') as SVGElement | null;
  const moonIcon = document.getElementById('moon') as SVGElement | null;

  if (themeToggle && sunIcon && moonIcon) {
    themeToggle.addEventListener('click', () => {
      document.documentElement.classList.toggle('dark');
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });

    // Initialize theme based on localStorage or system preference
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    }
  }
</script>
</Layout>