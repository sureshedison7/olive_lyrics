---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { compare } from 'bcryptjs';

let message: string | null = null;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const username = formData.get('username')?.toString();
  const password = formData.get('password')?.toString();

  if (username && password) {
    try {
      const db = Astro.locals.runtime.env.DB as import('astro').AstroGlobal['locals']['runtime']['env']['DB'];
      
      // Look up the user by username
      const { results } = await db.prepare('SELECT * FROM users WHERE user_name = ?')
        .bind(username)
        .all();
      
      const user = results[0];

      if (user && await compare(password, user.password)) {
        // Successful login
        message = '✅ Login successful!';
        
        // You would typically set a session cookie here.
        // For this example, we'll set a simple "logged-in" cookie.
        
        Astro.redirect('/admin/upload'); 
        Astro.response.headers.set('Set-Cookie', `session=logged_in; HttpOnly; Path=/; Max-Age=${60 * 60 * 24}`); // 1 day expiration
        
      } else {
        message = '❌ Invalid username or password.';
      }

    } catch (err: any) {
      console.error(err);
      message = `❌ An error occurred: ${err.message}`;
    }
  } else {
    message = '❌ Please enter both username and password.';
  }
}
---

<Layout
  title="Christian Lyrics - Login"
  description="Login to the Christian Lyrics admin panel."
>
  <Container>
    <div class="container mx-auto px-4 py-8">
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 max-w-sm mx-auto">
        <h1 class="text-3xl font-bold text-gray-800 dark:text-gray-100 mb-6 text-center">Login</h1>

        {message && <p class={`mb-4 text-center ${message.startsWith('✅') ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>{message}</p>}

        <form method="POST" class="space-y-4">
          <div>
            <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-200 mb-1">Username</label>
            <input 
              type="text"
              name="username" 
              id="username" 
              required 
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition"
            >
          </div>
          
          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-200 mb-1">Password</label>
            <input 
              type="password" 
              name="password" 
              id="password" 
              required 
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition"
            >
          </div>
          
          <div class="flex justify-center">
            <button 
              type="submit" 
              class="px-6 py-3 bg-blue-600 dark:bg-blue-700 text-white font-medium rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition w-full"
            >
              Log In
            </button>
          </div>
        </form>
      </div>
    </div>
  </Container>
</Layout>