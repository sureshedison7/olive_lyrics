---
export const prerender = false;
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import BackToPrevious from "@components/BackToPrevious.astro";
import FormattedDate from "@components/FormattedDate.astro";
import SongSchema from "@components/SongSchema.astro";
import { BLOG } from "@consts";

const { lyricPage } = Astro.params;

import type { LyricsTypes } from "@types";

let lyricsArticle: LyricsTypes | null = null;
let error: string | null = null;

try {
  const DB = Astro.locals.runtime.env.DB as D1Database;
  const safeLyricPage = typeof lyricPage === "string" ? lyricPage : "";
  const result = await DB.prepare("SELECT * FROM songs WHERE url = ?")
    .bind(decodeURIComponent(safeLyricPage))
    .first();

  if (result) {
    lyricsArticle = result as unknown as LyricsTypes;
  }
} catch (e) {
  console.error("Error fetching lyrics:", e);
  error = "Failed to load lyrics";
}

---

<Layout
  title={`${lyricsArticle?.title || "Lyrics"} - ${lyricsArticle?.artist || ""}`}
  description={lyricsArticle?.description || BLOG.DESCRIPTION}
>
  {lyricsArticle && (
    <SongSchema
      title={lyricsArticle.title}
      artist={lyricsArticle.artist}
      album={lyricsArticle.album}
      lyrics={lyricsArticle.lyrics}
      url={lyricsArticle.url}
      pubDate={lyricsArticle.pub_date}
      description={lyricsArticle.description}
    />
  )}
  <Container>
 
<div class="flex w-full bg-gray-100 rounded-lg p-1.5 border border-gray-200 shadow-sm dark:bg-gray-800 dark:border-gray-700">
  <a
    href={"/lyrics/"+lyricsArticle?.url} data-astro-reload
    class="flex-1 flex items-center justify-center gap-2 py-3 px-4 text-center font-medium rounded-md transition-all duration-300 bg-white text-indigo-600 shadow-sm border border-indigo-100 dark:bg-gray-700 dark:text-indigo-400 dark:border-indigo-900"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3" />
    </svg>
    Lyrics
  </a>
   
  <a
    href={"/chords/"+lyricsArticle?.url} data-astro-reload
    class="flex-1 flex items-center justify-center gap-2 py-3 px-4 text-center font-medium rounded-md transition-all duration-300 text-gray-600 hover:bg-white hover:text-amber-600 hover:shadow-sm hover:border border-transparent hover:border-amber-100 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-amber-400 dark:hover:border-amber-900"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
    Chords
  </a>
</div>

    {
      error ? (
        <div class="my-10 rounded-lg border border-red-200 bg-red-50/80 p-4 dark:border-red-800/50 dark:bg-red-900/20">
          <h1 class="text-xl font-bold text-red-800 dark:text-red-200">
            Error Loading Lyrics
          </h1>
          <p class="mt-2 text-red-600 dark:text-red-300">{error}</p>
        </div>
      ) : lyricsArticle ? (
        <div class="animate my-8">
          {/* Header with music note icon */}
          <div class="mb-6 flex items-start gap-3">
            <div>
              <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                {lyricsArticle.title}
              </h1>
              <h2 class="text-xl font-medium text-indigo-600 dark:text-indigo-400">
                {lyricsArticle.artist}
              </h2>
              {lyricsArticle.album && (
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                  From <em>{lyricsArticle.album}</em>
                </p>
              )}
            </div>
          </div>
          
          {/* New Font Size Controls */}
          <div
            class="flex flex-col sm:flex-row flex-wrap items-start sm:items-center gap-4 mb-6 p-4 bg-gray-50 rounded-lg dark:bg-gray-800/50"
          >
            <!-- Font Size Controls -->
            <div class="flex flex-col sm:flex-row items-start sm:items-center gap-2">
              <span class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 sm:mb-0">
                Font Size:
              </span>
              <div class="flex gap-2">
                <button
                  id="font-decrease"
                  class="p-2 text-gray-600 border border-gray-300 rounded-md shadow-sm dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors"
                  title="Decrease font size"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M5 12h14"></path>
                  </svg>
                </button>
                <button
                  id="font-reset"
                  class="px-3 py-1 text-sm font-medium text-gray-600 border border-gray-300 rounded-md shadow-sm dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors"
                  title="Reset font size"
                >
                  Reset
                </button>
                <button
                  id="font-increase"
                  class="p-2 text-gray-600 border border-gray-300 rounded-md shadow-sm dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors"
                  title="Increase font size"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M12 5v14M5 12h14"></path>
                  </svg>
                </button>
              </div>
            </div>
          </div>

          {/* Lyrics content with ID for JS */}
          <div id="lyrics-content" class="lyrics-container mt-8">
            <pre class="lyric-sheet">
              <div
              set:html={lyricsArticle.lyrics}
              class="chord-sheet overflow-hidden text-ellipsis whitespace-pre-wrap"
            />
            </pre>
          </div>

          {/* Footer */}
          {lyricsArticle.pub_date && (
            <div class="mt-12 border-t border-gray-200 pt-6 text-sm text-gray-500 dark:border-gray-700 dark:text-gray-400">
              <FormattedDate date={new Date(lyricsArticle.pub_date)} />
            </div>
          )}
        </div>
      ) : (
        <div class="animate my-10 p-6 text-center">
          <div class="mb-4 text-indigo-500 dark:text-indigo-400">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M9 18V5l12-2v13" />
              <circle cx="6" cy="18" r="3" />
              <circle cx="18" cy="16" r="3" />
              <path d="M12 8v4" />
              <path d="M12 8h.01" />
            </svg>
          </div>
          <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
            Lyrics Not Found
          </h1>
          <p class="mt-2 text-gray-600 dark:text-gray-400">
            No lyrics found for: {decodeURIComponent(lyricPage || "")}
          </p>
        </div>
      )
    }
  </Container>
</Layout>

<script is:inline>
  // Client-side JavaScript for font size controls
  document.addEventListener('DOMContentLoaded', () => {
    const lyricsContent = document.getElementById('lyrics-content');
    const increaseBtn = document.getElementById('font-increase');
    const decreaseBtn = document.getElementById('font-decrease');
    const resetBtn = document.getElementById('font-reset');

    if (!lyricsContent || !increaseBtn || !decreaseBtn || !resetBtn) {
      return;
    }

    const initialFontSize = 1.15; // Corresponds to .chord-sheet font-size
    let currentFontSize = initialFontSize;
    const sizeStep = 0.1;

    function updateFontSize() {
      lyricsContent.style.fontSize = `${currentFontSize}rem`;
      // Also apply to child elements if needed
      lyricsContent.querySelectorAll('.chord-sheet, .lyrics, .chord').forEach(el => {
        el.style.fontSize = `${currentFontSize}rem`;
      });
    }

    increaseBtn.addEventListener('click', () => {
      currentFontSize += sizeStep;
      updateFontSize();
    });

    decreaseBtn.addEventListener('click', () => {
      if (currentFontSize > sizeStep) {
        currentFontSize -= sizeStep;
        updateFontSize();
      }
    });

    resetBtn.addEventListener('click', () => {
      currentFontSize = initialFontSize;
      updateFontSize();
    });
  });
</script>

<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Source+Code+Pro:wght@400;500&display=swap");

  .lyric-sheet {
    font-size: 1.15rem;
    font-family: "Source Code Pro", monospace;
    white-space: pre-wrap; 
    word-break: break-word;
    color: #333;
    background-color: #f9fafb;
    border-radius: 8px;
    padding: 1.5rem;
    overflow-x: auto;
    transition: font-size 0.2s ease;
  }
  
  .dark .lyric-sheet {
    color: #e5e7eb;
    background-color: #1f2937;
  }
  
  .lyrics-container {
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      sans-serif;
  }

  /* Note: The font size for .chord-sheet is now managed by JS */
  .chord-sheet {
    font-size: 1.15rem; /* This is the default, but will be overridden by JS */
    white-space: pre-wrap;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      sans-serif;
    font-weight: 700;
    font-style: normal;
  }

  .row {
    white-space: wrap;
    font-size: 0;
  }

  .column {
    display: inline-block;
    vertical-align: top;
    font-size: 16px;
    margin-right: 10px;
  }

  .chord {
    font-weight: bold;
    color: #1a73e8;
    font-size: 0.9em;
    margin-bottom: 2px;
    min-height: 1.5em;
  }

  .lyrics {
    font-size: 1em;
    white-space: pre-wrap;
  }

  .chord {
    top: -1.2em;
    left: 0;
    font-family:
      "Inter",
      -apple-system,
      BlinkMacSystemFont,
      sans-serif;
    font-weight: 700;
    color: #5a67d8;
    padding: 0 2px;
  }

  .lyrics {
    white-space: pre;
    font-weight: 400;
  }

  .chorus,
  .verse,
  .bridge {
    padding-left: 1.5rem;
    border-left: 3px solid;
    margin-left: -1.5rem;
  }

  .chorus {
  }

  .chorus::before {
    content: "Chorus";
    display: block;
    font-weight: 600;
    color: #6b46c1;
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .verse {
    border-color: #4299e1;
    margin-bottom: 2rem;
  }

  .bridge {
    border-color: #f6ad55;
  }

  .lyrics {
    white-space: normal;
    word-break: break-word;
    display: inline-block;
  }

  .chord:hover {
    color: #44337a;
    background: #ebf4ff;
    border-radius: 4px;
  }

  pre{
      padding: 1.5rem;
      border-radius: 0.5rem;
  }

  @media (max-width: 640px) {
    .chord-sheet-container {
      padding: 1rem;
    }

    .chord-sheet-wrapper {
      padding: 1.5rem;
    }

    .song-title {
      font-size: 2rem;
    }
  }
</style>